name: stage

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Cache modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install deps
        run: npm ci --ignore-scripts
      - name: Build app
        run: npm run build
      - name: Archive build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          path: dist
          name: build
      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Adding known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Copy files to the server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          ssh $SSH_USER@$SSH_HOST "mkdir -p ~/app/${{ github.head_ref }}/public"
          rsync -ravz dist/* $SSH_USER@$SSH_HOST:~/app/${{ github.head_ref }}/public/
      - name: Review app URL
        if: success()
        uses: mshick/add-pr-comment@v2
        with:
          message: Created new review app at ${{ env.REVIEW_APP_URL }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          REVIEW_APP_URL: http://${{ github.head_ref }}.${{ secrets.APP_HOST }}/
